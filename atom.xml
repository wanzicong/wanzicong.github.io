<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>//欢迎来到这个超级帅气男人的网站//</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-08T14:17:17.828Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>爱笑的&amp;’码农‘&amp;</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬虫小实例</title>
    <link href="http://yoursite.com/2020/02/08/%E7%88%AC%E8%99%AB%E5%B0%8F%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2020/02/08/%E7%88%AC%E8%99%AB%E5%B0%8F%E5%AE%9E%E4%BE%8B/</id>
    <published>2020-02-08T14:16:26.000Z</published>
    <updated>2020-02-08T14:17:17.828Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬虫入门"><a href="#爬虫入门" class="headerlink" title="爬虫入门"></a>爬虫入门</h1><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><p>xpath 使用 去w3 官网进行学习</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.spider;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.openqa.selenium.By;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebDriver;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.openqa.selenium.WebElement;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.openqa.selenium.chrome.ChromeDriver;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 快捷键 :</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * ctrl +alt + v 抽取变量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * ctrl +alt + m 抽取方法(这个idea不适用)</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * shift + alt + m  抽取方法</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * shift +  alt + r 可以批量修改变量</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * shift + enter 可以从一行的中间换行</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * ctrl + alt + l 自动对齐</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * alt + enter ---选try catch or throw 抛异常快捷键</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 集合名字.for() + enter(回车) 循环快捷键</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 变量.sout + enter(回车) 输出打印该元素</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Spider</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//操作浏览器</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        System.setProperty("webdriver.chrome.driver", Spider.class.getClassLoader().getResource("chromedriver.exe").getPath());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        WebDriver webDriver = <span class="keyword">new</span> ChromeDriver();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        webDriver.get(<span class="string">"https://www.lagou.com/zhaopin/Java/?labelWords=label"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        webDriver.findElement(By.xpath(<span class="string">"//div[@class='body-btn']"</span>)).click();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//操作页面的元素</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//选中选项 跳转页面</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//点击弹出来的对话框</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">        clickOption(webDriver, <span class="string">"工作经验"</span>, <span class="string">"不限"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">        clickOption(webDriver, <span class="string">"学历要求"</span>, <span class="string">"本科"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">        clickOption(webDriver, <span class="string">"融资阶段"</span>, <span class="string">"不限"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">        clickOption(webDriver, <span class="string">"公司规模"</span>, <span class="string">"不限"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">        clickOption(webDriver, <span class="string">"行业领域"</span>, <span class="string">"移动互联网"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//解析页面元素</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">        getJobsByPagination(webDriver);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getJobsByPagination</span><span class="params">(WebDriver webDriver)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">        List&lt;WebElement&gt; jodElements = webDriver.findElements(By.className(<span class="string">"con_list_item "</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (WebElement jodElement : jodElements) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">            WebElement moneyElement = jodElement.findElement(By.className(<span class="string">"position"</span>)).findElement(By.className(<span class="string">"money"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">            WebElement company_name = jodElement.findElement(By.className(<span class="string">"company_name"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">            System.out.println(company_name.getText() + <span class="string">" : "</span> + moneyElement.getText());</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">        WebElement nextPageBtn = webDriver.findElement(By.className(<span class="string">"pager_next "</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (!nextPageBtn.getAttribute(<span class="string">"class"</span>).contains(<span class="string">"pager_next_disabled"</span>)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"----解析下一页---"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//点击下一页</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">            nextPageBtn.click();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">try</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">                Thread.sleep(<span class="number">2000L</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">                e.printStackTrace();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//递归调用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">            getJobsByPagination(webDriver);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clickOption</span><span class="params">(WebDriver webDriver, String chosenTitle, String optionTitle)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">        WebElement chosenElement = webDriver.findElement(By.xpath(<span class="string">"//li[@class='multi-chosen']//span[contains(text(),'"</span> + chosenTitle + <span class="string">"')]"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">        WebElement optionElement = chosenElement.findElement(By.xpath(<span class="string">"../a[contains(text(),'"</span> + optionTitle + <span class="string">"')]"</span>));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">        optionElement.click();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;爬虫入门&quot;&gt;&lt;a href=&quot;#爬虫入门&quot; class=&quot;headerlink&quot; title=&quot;爬虫入门&quot;&gt;&lt;/a&gt;爬虫入门&lt;/h1&gt;&lt;h2 id=&quot;基础入门&quot;&gt;&lt;a href=&quot;#基础入门&quot; class=&quot;headerlink&quot; title=&quot;基础入门&quot;&gt;&lt;/a
      
    
    </summary>
    
    
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>springCloud 入门步骤和概念</title>
    <link href="http://yoursite.com/2020/02/07/springCloud-%E5%85%A5%E9%97%A8%E6%AD%A5%E9%AA%A4%E5%92%8C%E6%A6%82%E5%BF%B5/"/>
    <id>http://yoursite.com/2020/02/07/springCloud-%E5%85%A5%E9%97%A8%E6%AD%A5%E9%AA%A4%E5%92%8C%E6%A6%82%E5%BF%B5/</id>
    <published>2020-02-07T05:52:07.000Z</published>
    <updated>2020-02-07T05:53:45.448Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-SpringBoot-入门"><a href="#1-SpringBoot-入门" class="headerlink" title="1. SpringBoot 入门"></a>1. SpringBoot 入门</h2><h3 id="核心概念"><a href="#核心概念" class="headerlink" title="核心概念"></a>核心概念</h3><p>注册中心</p><p>服务的消费者</p><p>服务的提供者</p><h3 id="SpringCloud-五大组件"><a href="#SpringCloud-五大组件" class="headerlink" title="SpringCloud 五大组件"></a>SpringCloud 五大组件</h3><p>• 服务发现——Netflix Eureka</p><p>• 客服端负载均衡——Netflix Ribbon</p><p>• 断路器——Netflix Hystrix</p><p>• 服务网关——Netflix Zuul</p><p>• 分布式配置——Spring Cloud Config</p><h3 id="SpringCloud的重要概念"><a href="#SpringCloud的重要概念" class="headerlink" title="SpringCloud的重要概念"></a>SpringCloud的重要概念</h3><p>配置管理</p><p>服务发现</p><p>熔断</p><p>路由</p><p>微代理</p><p>控制总线</p><p>一次性token</p><p>全局琐</p><p>leader选举</p><p>分布式session</p><p>集群状态</p><h3 id="入门步骤"><a href="#入门步骤" class="headerlink" title="入门步骤"></a>入门步骤</h3><p>– 1、创建provider</p><p>– 2、创建consumer</p><p>– 3、引入Spring Cloud</p><p>– 4、引入Eureka注册中心</p><p>– 5、引入Ribbon进行客户端负载均衡</p><p>– 6、引入Feign进行声明式HTTP远程调用</p><h2 id="2-SpringCloud-的入门实践"><a href="#2-SpringCloud-的入门实践" class="headerlink" title="2. SpringCloud 的入门实践"></a>2. SpringCloud 的入门实践</h2><h3 id="工程的基本组成"><a href="#工程的基本组成" class="headerlink" title="工程的基本组成"></a>工程的基本组成</h3><p>三个SpringBoot的模块</p><p>第一个是服务的注册中心</p><p>第二个是服务的提供者</p><p>第三个是服务的消费者</p><h3 id="编写服务的注册中心"><a href="#编写服务的注册中心" class="headerlink" title="编写服务的注册中心"></a>编写服务的注册中心</h3><p>编写注册中心的配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8761</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">instance:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">hostname:</span> <span class="string">server</span>  <span class="comment"># 注册中心实例的名字</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">client:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>  <span class="comment"># 作用就是不把自己注册在注册中心</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span> <span class="comment"># 不获取服务的注册信息</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">service-url:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">defaultZone:</span>  <span class="string">http://localhost:8761/eureka/</span></span></pre></td></tr></table></figure><p>编写启动注册功能的注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 注册中心</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//启动注册中心的服务</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableEurekaServer</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerApplication</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        SpringApplication.run(ServerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="编写服务提供者注册功能"><a href="#编写服务提供者注册功能" class="headerlink" title="编写服务提供者注册功能"></a>编写服务提供者注册功能</h3><p>正常编写业务逻辑 service and controller</p><p>编写注册提供者的配置信息 ，将服务注册到注册中心</p><p>编写注册的配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册服务到注册中心</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">application:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">name:</span> <span class="string">provider</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注册自己</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">instance:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>  <span class="comment">#注册服务的时候使用服务的IP地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">client:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">service-url:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">defaultZone:</span>  <span class="string">http://localhost:8761/eureka/</span></span></pre></td></tr></table></figure><h3 id="编写服务消费者订阅功能"><a href="#编写服务消费者订阅功能" class="headerlink" title="编写服务消费者订阅功能"></a>编写服务消费者订阅功能</h3><p>编写业务逻辑 service and controller </p><p>编写注册信息将自己注册到注册中心  <strong>注册信息 消费者 和 提供者的注册信息一样</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8002</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">application:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">name:</span> <span class="string">ticket-user</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发现服务</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">instance:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>  <span class="comment">#注册服务的时候使用服务的IP地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">client:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">service-url:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      <span class="attr">defaultZone:</span>  <span class="string">http://localhost:8761/eureka/</span></span></pre></td></tr></table></figure><p>编写启动类 添加注解 以及注册 用到的类信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableDiscoveryClient</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplication</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        SpringApplication.run(ConsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//发送http请求</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@LoadBalanced</span> <span class="comment">//平衡加载</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Bean</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>实现业务逻辑的调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Autowired</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    RestTemplate restTemplate;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/buy"</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">buyTicket</span><span class="params">(String name)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="comment">//url 是 提供者在注册中心的主机名 + controller里面的请求地址</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        String url =  <span class="string">"http://TICKET-PROVIDER/ticket"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        String ticket = restTemplate.getForObject(url, String<span class="class">.<span class="keyword">class</span>)</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> name + <span class="string">"购买了"</span> + ticket;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="入门实践的总结"><a href="#入门实践的总结" class="headerlink" title="入门实践的总结"></a>入门实践的总结</h3><p>他们进行引入pom 文件的时间引入的类名不一样 启用的作用不同 </p><p>一类是注册中心功能</p><p>一类是发现服务功能</p><p>代码路径 </p><p><a href="https://github.com/garxin/SpringBoot-Advanced" target="_blank" rel="noopener">https://github.com/garxin/SpringBoot-Advanced</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-SpringBoot-入门&quot;&gt;&lt;a href=&quot;#1-SpringBoot-入门&quot; class=&quot;headerlink&quot; title=&quot;1. SpringBoot 入门&quot;&gt;&lt;/a&gt;1. SpringBoot 入门&lt;/h2&gt;&lt;h3 id=&quot;核心概念&quot;&gt;&lt;a hr
      
    
    </summary>
    
    
    
      <category term="springcloud" scheme="http://yoursite.com/tags/springcloud/"/>
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>Springboot 基础</title>
    <link href="http://yoursite.com/2020/02/05/Springboot-%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2020/02/05/Springboot-%E5%9F%BA%E7%A1%80/</id>
    <published>2020-02-05T06:25:56.000Z</published>
    <updated>2020-02-05T06:29:28.390Z</updated>
    
    <content type="html"><![CDATA[<h1 id="springBoot基础"><a href="#springBoot基础" class="headerlink" title="springBoot基础"></a>springBoot基础</h1><h2 id="1-配置数据源信息（Druid）"><a href="#1-配置数据源信息（Druid）" class="headerlink" title="1. 配置数据源信息（Druid）"></a>1. 配置数据源信息（Druid）</h2><ol><li><p>使用的数据源默认是 jdbc.pool.DataSources</p></li><li><p>jdbc 整合 略</p></li><li><p>数据源的的相关配置都在DataSourceProperties 类里面</p></li><li><p>数据源的自动配置原理</p><ol><li>DataSourceConfiguration类 根据配置进行数据源的设置连接池<ol start="2"><li>spring.datasource.type 指定自定义的数据源配置<ol start="3"><li>springBoot 支持数据源（。。。。。。。。好多）<ol start="4"><li>可以自己创建数据源<ol start="5"><li>自动配置类当中可以自动进行数据源的 配置并且支持自动执行sql语句<ol><li><strong>放在resources路径下 并且名字 是schema- <em>.sql   — data-</em>sql文件类型</strong><ol start="2"><li><strong>也可以使用配置的方式指定 执行文件的路径 以及名字</strong> <pre><code>6. 也有自动配置的操作数据库的类 JDBCTemplate </code></pre></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol></li></ol><ol start="5"><li><p>高级配置-整合druid 数据源</p><ol><li><p>引入数据源</p></li><li><pre><code class="java">spring.datasource.type= 数据源的全类名&lt;!--￼<span class="number">0</span>--&gt;</code></pre></li></ol></li></ol><h2 id="2-整合Mybatis"><a href="#2-整合Mybatis" class="headerlink" title="2.整合Mybatis"></a>2.整合Mybatis</h2><ol><li><p><strong>使用注解版的方式</strong></p><ol><li>在Service 类上面加入@Mapper 注解</li><li>也可以在启动类里面加入 @MapperScan(value = “全类名”) —–就不用都添加@Mapper注解了</li></ol></li><li><p><strong>自动获取自增主键（在注解版当中）</strong></p><ol><li><p>该注解作用在 方法上</p></li><li><pre><code class="java"><span class="meta">@Options</span>(useGeneratedKeys = <span class="keyword">true</span> ,keyProperty = <span class="string">"id"</span>)&lt;!--￼<span class="number">1</span>--&gt;</code></pre></li><li><p><strong>使用mybatis全局配置文件   和  mapper.xml 文件进行配置</strong></p><ol><li><p>mybatis 全局配置文件可以替换 类配置文件</p></li><li><p>使用映射文件操作数据库 需要的配置</p><ol><li><pre><code class="xml">mybatis.config-location=classpath:配置文件路径mybatis.mapper-locations= classpath:处理数据库的接口类mybatis.type-aliases-package=com.project.model 扫描实体类的路径<span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr></table></figure></span></code></pre></li></ol></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">4. mybatis 全局配置文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        &#96;&#96;&#96;xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        &lt;!DOCTYPE configuration</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Config 3.0&#x2F;&#x2F;EN&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">                &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-config.dtd&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        &lt;configuration&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            &lt;settings&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">                &lt;setting name&#x3D;&quot;mapUnderscoreToCamelCase&quot; value&#x3D;&quot;true&quot;&#x2F;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">            &lt;&#x2F;settings&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        &lt;&#x2F;configuration&gt;</span></pre></td></tr></table></figure></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">5. mapper.xml 映射文件</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       &#96;&#96;&#96;xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">       &lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; ?&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">       &lt;!DOCTYPE mapper</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">               PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">               &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">       &lt;mapper namespace&#x3D;&quot;com.atguigu.springboot.mapper.EmployeeMapper&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">          &lt;!--    public Employee getEmpById(Integer id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">           public void insertEmp(Employee employee);--&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">           &lt;select id&#x3D;&quot;getEmpById&quot; resultType&#x3D;&quot;com.atguigu.springboot.bean.Employee&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">               SELECT * FROM employee WHERE id&#x3D;#&#123;id&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">           &lt;&#x2F;select&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">       </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">           &lt;insert id&#x3D;&quot;insertEmp&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">               INSERT INTO employee(lastName,email,gender,d_id) VALUES (#&#123;lastName&#125;,#&#123;email&#125;,#&#123;gender&#125;,#&#123;dId&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">           &lt;&#x2F;insert&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">       &lt;&#x2F;mapper&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">   &#96;&#96;&#96;xml</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">   &lt;!DOCTYPE mapper PUBLIC &quot;-&#x2F;&#x2F;mybatis.org&#x2F;&#x2F;DTD Mapper 3.0&#x2F;&#x2F;EN&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">           &quot;http:&#x2F;&#x2F;mybatis.org&#x2F;dtd&#x2F;mybatis-3-mapper.dtd&quot; &gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">   </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">         &lt;mapper namespace&#x3D;&quot;com.project.mapper.UserMapper&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">             &lt;select id&#x3D;&quot;xml&quot; resultType&#x3D;&quot;com.project.model.User&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">                 select  * from user</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">             &lt;&#x2F;select&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">         &lt;&#x2F;mapper&gt;</span></pre></td></tr></table></figure></li></ol><pre><code>5. 使用yml 文件进行数据的配置   <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">datasource:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#   数据源基本配置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.15.22:3306/mybatis</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#   数据源其他配置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">#   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span></pre></td></tr></table></figure></code></pre><ol start="6"><li><p>指定全局配置文件位置</p><pre><code>config-location: classpath:mybatis/mybatis-config.xml# 指定sql映射文件位置mapper-locations: classpath:mybatis/mapper/*.xml</code></pre><p>  //指定项目启动 时间执行的sql 语句的位置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">schema:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   - classpath:sql/department.sql</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">- classpath:sql/employee.sql</span></pre></td></tr></table></figure><h2 id="3-配置文件"><a href="#3-配置文件" class="headerlink" title="3.配置文件"></a>3.配置文件</h2><h3 id="1-配置文件类型"><a href="#1-配置文件类型" class="headerlink" title="1. 配置文件类型"></a>1. 配置文件类型</h3></li><li><p>property</p></li><li><p>yaml</p></li><li><p>优先级 applocation.property &gt; application.yaml</p><h3 id="2-外部文件加载顺序"><a href="#2-外部文件加载顺序" class="headerlink" title="2. 外部文件加载顺序"></a>2. 外部文件加载顺序</h3></li><li><p>使用命令行运行项目时间，修改默认配置。</p></li><li><p>优先加载 带   .profile </p></li></ol><h3 id="3-配置文件加载位置"><a href="#3-配置文件加载位置" class="headerlink" title="3. 配置文件加载位置"></a>3. 配置文件加载位置</h3><ol><li>file/config</li><li>file/</li><li>resources/ config 文件下面</li><li>resources 的根目录下面</li><li>优先级从高到低 高优先级的配置文件会覆盖低优先级的配置</li><li>可以使用spring.config.location= 路径 （写在配置文件的里面） 来改变配置文件的位置 </li></ol><h3 id="4-配置文件的文件名字的含义"><a href="#4-配置文件的文件名字的含义" class="headerlink" title="4 配置文件的文件名字的含义"></a>4 配置文件的文件名字的含义</h3><ol><li><p>application.dev.property  开发环境</p></li><li><p>application.prod.property 生产环境</p></li><li><p>默认使用的是  application.property </p></li><li><p>可以激活 开发环境 或者生产环境—– 在 application.property 中加入 spring.profile.active=dev 激活开发环境</p></li><li><p>使用yaml 配置文件中使用多文档块 </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">profiles:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">profiles:</span> <span class="string">prod</span></span></pre></td></tr></table></figure></li></ol><p>   ​    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;springBoot基础&quot;&gt;&lt;a href=&quot;#springBoot基础&quot; class=&quot;headerlink&quot; title=&quot;springBoot基础&quot;&gt;&lt;/a&gt;springBoot基础&lt;/h1&gt;&lt;h2 id=&quot;1-配置数据源信息（Druid）&quot;&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="SpringBoot" scheme="http://yoursite.com/tags/SpringBoot/"/>
    
      <category term="SpringBoot基础" scheme="http://yoursite.com/tags/SpringBoot%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>springboot-缓存使用-高级</title>
    <link href="http://yoursite.com/2020/01/30/springboot-%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8-%E9%AB%98%E7%BA%A7/"/>
    <id>http://yoursite.com/2020/01/30/springboot-%E7%BC%93%E5%AD%98%E4%BD%BF%E7%94%A8-%E9%AB%98%E7%BA%A7/</id>
    <published>2020-01-30T13:54:08.000Z</published>
    <updated>2020-01-30T13:55:40.399Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-SpringBoot-与缓存"><a href="#1-SpringBoot-与缓存" class="headerlink" title="1.SpringBoot 与缓存"></a>1.SpringBoot 与缓存</h3><h4 id="1-缓存的重要概念"><a href="#1-缓存的重要概念" class="headerlink" title="1. 缓存的重要概念"></a>1. 缓存的重要概念</h4><ol><li>cache接口<ol><li>实现类 RedisCache 类 EhCache类 ConcurrentMapCache 类</li><li>进行对缓存进行 增删改查操作</li></ol></li><li>cacheManager接口<ol><li>作用: 管理缓存组件</li></ol></li><li>@CacheAble 注解<ol><li>作用在方法上</li><li>将方法返回结果加入缓存当中</li></ol></li><li>@CacheEvict注解<ol><li>清空缓存</li><li>作用在方法上</li></ol></li><li>CachePut注解<ol><li>更新缓存</li><li>作用在方法上</li></ol></li><li>EnableCaching 注解<ol><li>开启基于注解的缓存模式</li></ol></li><li>keyGenerater<ol><li>缓存数据key 生成策略</li></ol></li><li>serialize<ol><li>缓存数据 value 生成策略</li></ol></li></ol><h4 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h4><ol><li><p>略</p></li><li><p>略</p></li><li><p>配置Mybatis信息</p><ol><li><p>配置数据源 在application.property 文件当中</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.driverClassName</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/spring?useSSL=false&amp;serverTimezone=UTC</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">password</span></span></pre></td></tr></table></figure></li><li><p>使用注解版的mybatis</p><ol><li><p>在入口类上加上 @MapperScan（全类名-包）</p><ol><li>作用扫描mapper 类</li></ol></li><li><p>开启驼峰命名法</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis.configuration.map-</span>  <span class="string">underscore-to-camel-case=true</span></span></pre></td></tr></table></figure></li></ol></li></ol></li><li><p>体验注解步骤</p><ol><li><p>开启基于注解缓存</p><ol><li>在入口函数加上@EnableCaching</li></ol></li><li><p><strong>标注缓存注解即可</strong></p><ol><li><strong>@Cacheable</strong> <ol><li><strong>cacheName / value（将方法的返回结果保存起来）</strong></li><li><strong>key</strong></li><li><strong>keyGenerator 生成器</strong></li><li><strong>cacheManager cacheResolver 缓存管理器</strong></li><li><strong>condition 指定符合条件下才缓存</strong></li><li><strong>unless : 否定缓存 =true 时不缓存</strong></li><li><strong>sync 异步模式</strong></li><li>​    <strong>@Cacheable(cacheNames = “emp”)</strong></li></ol></li><li><strong>@CacheEvict</strong></li><li><strong>@Cacheput</strong></li><li><strong>@Caching</strong></li><li><code>说明: 使用这些注解的前提是已经配置好了 and缓存已经开启的状态下</code></li></ol></li><li><p>打印日志</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印日志</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">logging.level.com.cache.mapper（包名）</span>=<span class="string">debug</span></span></pre></td></tr></table></figure></li><li><p>使用缓存过程中必须手动启动 redis 缓存,否则报错无法连接缓存    </p><ol><li>@Cacheable(cacheNames = “emp”)</li></ol></li><li><p>访问缓存数据使用spEl表达式 </p></li></ol></li><li><p>使用@Cacheable注解中的key 属性 + spel 表达式自定义缓存名</p><ol><li><pre><code class="java">key = <span class="string">"#root.methodName+'['+#id+']'</span><span class="string"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">6. 使用@Cacheable注解中的keyGenerator属性 </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   1. 指定自己的可以的生成器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">   2. 在配置类当中加入代码</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      &#96;&#96;&#96;java</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">      public class MyCache &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">          &#x2F;**</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">           * 自定义cache生成器</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">           *&#x2F;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">          @Bean(&quot;mykeyGenerator&quot;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">          public KeyGenerator keyGenerator()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            return new KeyGenerator()&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">                  @Override</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">                  public Object generate(Object target, Method method, Object... params) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">                      return method.getName() + &quot;[&quot; + Arrays.asList(params).toString() + &quot;]&quot;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">                  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">              &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr></table></figure></span></code></pre></li><li><p>在注解中加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">keyGenerator = <span class="string">"mykeyGenerator"</span> (bean 的id)</span></pre></td></tr></table></figure></li></ol></li><li><p>使用@CachePut更新修改后的 缓存</p><ol><li><p>注意: 修改后的缓存 需要与之前的缓存保持一致</p></li><li><p>与sql 语句的update 对应 </p></li><li><p>与跟新的key 保持一致 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@CachePut</span>(value = <span class="string">"emp"</span> ,key <span class="string">"#result.id"</span>)</span></pre></td></tr></table></figure></li></ol></li><li><p>使用@CacheEvict 注解 清除之前的缓存 </p><ol><li><p>对应的是sql 语句的delete 语句</p></li><li><p>与之前的缓存id 保持一致</p></li><li><pre><code class="java">(属性)allEntries = <span class="keyword">true</span> 删除缓存中的所有数据&lt;!--￼<span class="number">6</span>--&gt;<span class="meta">@CacheEvict</span>((属性)value = <span class="string">"emp"</span>,              （属性）key=<span class="string">"#id"</span>,（属性）allEntries = <span class="keyword">true</span>)&lt;!--￼<span class="number">7</span>--&gt;</code></pre></li></ol></li><li><p>@CacheConfig 注解 </p><ol><li>作用在类上</li><li>指定所有的缓存value值    ====   cacheName = “名字”</li><li>指定 不同缓存注解的公共属性：keyGenerator，cacheManager cacheReslover 属性</li></ol></li></ol><h4 id="3-源码"><a href="#3-源码" class="headerlink" title="3 源码"></a>3 源码</h4><pre><code>1. [SpringBoot高级](https://github.com/garxin/SpringBoot-Advanced)</code></pre><h4 id="4-高级搭建-redis环境"><a href="#4-高级搭建-redis环境" class="headerlink" title="4 高级搭建 redis环境"></a>4 高级搭建 redis环境</h4><ol><li><p>缓存没有进行配置时间默认使用的是 CacheManager(缓存管理器) 为 ConcurrentMapCacheManager</p><pre><code>1. 将数据保存到了ConcurrentMap&lt;&gt; 中</code></pre></li><li><p>开发中经常使用一些缓存中间件 redis  memcached ehcache</p></li><li><p>===== 整合redis  =======</p></li><li><p>配置redis 在配置文件当中</p></li><li><p>配置后就可用 RedisTemplate 类 和 StringRedisTemplate 类 来操作redis</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">stringRedisTemplate.opsForValue().append(<span class="string">"msg"</span>,<span class="string">"子聪"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">stringRedisTemplate.opsForValue().set(<span class="string">"msg"</span>,<span class="string">"王子"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">String msg = stringRedisTemplate.opsForValue().get(<span class="string">"msg"</span>);</span></pre></td></tr></table></figure></li><li><p>自定义RedisTemplate的序列化器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法名就是bean的id</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">@bean</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        Jackson2JsonRedisSerializer&lt;Employee&gt; serializer = <span class="keyword">new</span>        Jackson2JsonRedisSerializer&lt;Employee&gt;(Employee<span class="class">.<span class="keyword">class</span>)</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        redisTemplate.setDefaultSerializer(serializer);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">return</span> redisTemplate;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li><li><p>=======测试缓存 =======</p></li><li><p>自定义CacheManager 来进行序列化的改造</p></li><li><p>@Primary 注解作用：指定默认 的缓存管理器</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-SpringBoot-与缓存&quot;&gt;&lt;a href=&quot;#1-SpringBoot-与缓存&quot; class=&quot;headerlink&quot; title=&quot;1.SpringBoot 与缓存&quot;&gt;&lt;/a&gt;1.SpringBoot 与缓存&lt;/h3&gt;&lt;h4 id=&quot;1-缓存的重要概念
      
    
    </summary>
    
    
    
      <category term="springboot" scheme="http://yoursite.com/tags/springboot/"/>
    
      <category term="缓存" scheme="http://yoursite.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>npm创建vue项目</title>
    <link href="http://yoursite.com/2020/01/30/npm%E5%88%9B%E5%BB%BAvue%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2020/01/30/npm%E5%88%9B%E5%BB%BAvue%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-01-30T12:52:19.000Z</published>
    <updated>2020-01-30T12:54:14.805Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建vue3-项目的步骤"><a href="#创建vue3-项目的步骤" class="headerlink" title="创建vue3 项目的步骤"></a>创建vue3 项目的步骤</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>安装全局的vue 脚手架（电脑安装一次就行了）</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span></pre></td></tr></table></figure><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>检查vue脚手架的 版本</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">vue -V (!必须是大写的V)</span></pre></td></tr></table></figure><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>创建新文件夹 ，进入文件夹执行命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function">vue create <span class="title">myVue</span>  <span class="params">(!项目名称)</span></span></span></pre></td></tr></table></figure><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>进行项目的初始化，选择安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">出现界面的选择， 选择手动设置</span></pre></td></tr></table></figure><h3 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h3><p>1) .  选择配置的内容（关键的一步）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">选择第一个 Babel</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">选择第第四个 Router（路由）</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">Linter/Formattor 可以选， 初学不建议选， 最后可以在项目中进行组件追加的方式</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">其他的组件有进行单元测试用的 可以进行添加配置</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">npm install 命令 就是进行组件的下载用</span></pre></td></tr></table></figure><p>2) . 选择别的一些设置</p><pre><code>1. 是否使用历史的设置 -----选择 y   2. 其他的....  选择 y    3. 选择 json   4. 全部默认直到结束 </code></pre><h3 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h3><p>启动安装好的vue项目</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm run server</span></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>安装淘宝镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm  install  -g  cnpm  --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span></pre></td></tr></table></figure><h2 id="启动一个项目"><a href="#启动一个项目" class="headerlink" title="启动一个项目"></a>启动一个项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install</span></pre></td></tr></table></figure><h3 id="Compiles-and-hot-reloads-for-development"><a href="#Compiles-and-hot-reloads-for-development" class="headerlink" title="Compiles and hot-reloads for development"></a>Compiles and hot-reloads for development</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm run serve</span></pre></td></tr></table></figure><h3 id="Compiles-and-minifies-for-production"><a href="#Compiles-and-minifies-for-production" class="headerlink" title="Compiles and minifies for production"></a>Compiles and minifies for production</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm run build</span></pre></td></tr></table></figure><h3 id="Customize-configuration"><a href="#Customize-configuration" class="headerlink" title="Customize configuration"></a>Customize configuration</h3><p>See <a href="https://cli.vuejs.org/config/" target="_blank" rel="noopener">Configuration Reference</a>.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建vue3-项目的步骤&quot;&gt;&lt;a href=&quot;#创建vue3-项目的步骤&quot; class=&quot;headerlink&quot; title=&quot;创建vue3 项目的步骤&quot;&gt;&lt;/a&gt;创建vue3 项目的步骤&lt;/h2&gt;&lt;h3 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class
      
    
    </summary>
    
    
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>博客部署命令</title>
    <link href="http://yoursite.com/2020/01/30/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/01/30/%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%91%BD%E4%BB%A4/</id>
    <published>2020-01-30T12:51:47.000Z</published>
    <updated>2020-01-30T12:57:05.564Z</updated>
    
    <content type="html"><![CDATA[<h3 id="上传hexo-博客的命令"><a href="#上传hexo-博客的命令" class="headerlink" title="上传hexo 博客的命令"></a>上传hexo 博客的命令</h3><h3 id="第一条命令"><a href="#第一条命令" class="headerlink" title="第一条命令"></a>第一条命令</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr></table></figure><h3 id="第二条命令"><a href="#第二条命令" class="headerlink" title="第二条命令"></a>第二条命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo g （generate）</span></pre></td></tr></table></figure><h3 id="第三条命令"><a href="#第三条命令" class="headerlink" title="第三条命令"></a>第三条命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo deploy</span></pre></td></tr></table></figure><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">输入自己的GitHub账号和密码 就行</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;上传hexo-博客的命令&quot;&gt;&lt;a href=&quot;#上传hexo-博客的命令&quot; class=&quot;headerlink&quot; title=&quot;上传hexo 博客的命令&quot;&gt;&lt;/a&gt;上传hexo 博客的命令&lt;/h3&gt;&lt;h3 id=&quot;第一条命令&quot;&gt;&lt;a href=&quot;#第一条命令&quot; c
      
    
    </summary>
    
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
